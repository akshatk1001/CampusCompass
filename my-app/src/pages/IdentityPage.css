/* IdentityPage component styles */
.dropdown-container {
  width: 100%;
  max-width: 400px;
  margin: 20px auto;
}

.next-button {
  background-color: #c69214;
  color: white;
  border: none;
  padding: 15px 30px;
  border-radius: 10px;
  cursor: pointer;
  font-size: 1.2rem;
  margin-top: 20px;
  transition: all 0.3s ease;
  font-family: "Bebas Neue", serif;
}

.next-button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.next-button:not(:disabled):hover {
  background-color: #a6780f;
  transform: translateY(-2px);
}

/* 
  DROPDOWN STYLING: Much simpler approach using regular CSS!
  
  Instead of complex JavaScript objects, we style the react-select dropdown
  using normal CSS classes. This is more typical and easier to understand.
  
  How it works:
  - react-select automatically applies CSS classes like "react-select__control"
  - We can target these classes in our CSS file to change the appearance
  - Much more familiar if you know regular CSS!
*/
.dropdown-container .react-select__control {
  background-color: #f0f8ff;
  border-color: #ccc;
  box-shadow: none;
}

.dropdown-container .react-select__control:hover {
  border-color: #00838f;
}

.dropdown-container .react-select__control--is-focused {
  border-color: #2684ff;
  box-shadow: 0 0 0 1px #2684ff;
}

.dropdown-container .react-select__menu {
  max-height: 300px;
  overflow-y: auto;
  z-index: 9999;
}

.dropdown-container .react-select__option {
  padding: 10px;
}

.dropdown-container .react-select__option--is-focused {
  background-color: #2684ff;
  color: #fff;
}

.dropdown-container .react-select__option--is-selected {
  background-color: #2684ff;
}
